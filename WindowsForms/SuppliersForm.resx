<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>