<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>