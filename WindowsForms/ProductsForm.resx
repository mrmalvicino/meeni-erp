<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAYAAAA5ZDbSAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAREElEQVR4Xu2dCZAeRRXHV+VUICQgIFckKAIBCQQtjYIHHghFKigqhxYRPKKIicFSEQVUFIMQvEVK
        IZ54E4/yKEUC3mJJpDxBZMULPGC9D9T4/63Ta+/s6zl79rt6q/613843093T/36v33v9unds06ZNYwnD
        2weJ3CEf4IngRPDwqq9RmJqSBCcJThI8yJKeJDhJcJLgJMFDLgWJ4ERw3051fduwQZaafmp7InjItU8i
        OBGcrOh+Url125IkOElwkuC6UtNP9ycJThI8mBI8Nja2u3C2MJ7hQv1eLNy9nySs67YMlQSLvM2EI4SP
        CH8XNhn4oa6dK+wv3K3rDu51+UNBsIiaJ6wSvh8g1SL6X7r328KLhD17TURX9Q8swUif8CDhMuHPBrH/
        1rVrhROFo4X3Cn8IDIC7dH2D8Bxhp646uxflDhzBImAbYbnw9QBZd+r624VF+Q7Nnj1evz8h/CXwPKr9
        U8IJwpxekBKzzoEhWJ3NnPlG4TcBYjbq+nOF7at0kO67t/As4Srhn4EykfgrhGOErauU22/39DXB6tTN
        hScKXxBQo/m5FGl7v/BwobF1rGexuF8ofEtAtVtz9m91/VLhUcI9+o3IUHv6kuCsw3Fxbg10tiPg9/r+
        dcL8WB2usvYRzhF+IPwnUD/tukg4tN/J7huC6SihyMVBgjGamGMtSUaVLhGiuD5oBAG/+fXCLQUDjYFw
        rrB/rEEWs5yeE6yOmSusLJCY2/Xd+cL9ePHsftTpzUano14xvjCQNo/VUZQlHC5gvKGqi9yuM/T9HrHq
        bltOzwjOpONd+m25OPio1wgnCVtaL6nrSPyxwgbBmjd/rutnClHdnoxs3K73CRMBsmkP7cLo26otSW2e
        7wnBemksWItY1O/bhIPqvJTuZy58j/BXo8P/pGuXCAfUKbPKvSpzOwE/G7fKqhtJP79KWV3d0yuCFwZG
        /nWZVG7W5IX17G7Cq4TbjPKZwz8nHCk0trj9dqmcLYWjhMuFPwbe6Yom7xLrmV4RjE9rzWPu2k/0PfPs
        3CYvque2Fp4hbBQsSxjDaIWwTd3y9cxWAioaUrHii96D70aeYAIXHxasxYEJXb9YuH9dIjKDDEsYyxwV
        agUzMJgw4ArdrGzAPEG/CYv+roBUrG3ae4F3z8gTfGNGxgJ1yppAB0LOeoEgQyM3SM89QHiTYMWjGVy4
        WQ915es3kor6hdSQ5YyEjmek4qJNTi36wTh0kp0Izs1r26pzniewrJdXf6jb64XlQqPQoZ7DLVstWL4t
        5eNmsTARklTugdS12YCYEdVKBI+N7eeRNynBeeh71Ctq8fOCFabEkHqlsFtD9c3a8XEC4cmyeRRSGRCO
        1EIjLRFcgeCcVD9QnfYOAZcnTwarQuuExVWJRvqzwYOhFFq8oB43p06p3yp1JIKnE3xTlU7L5rad1Hkv
        E35hEE1w4WphmWCpzS103bk0RXOqG0AEYZq6ayM/B/squjLBbiCo4yGLcOQ3BCuK9VNdXyXcxyP1joAq
        9tUvBpUjeG3VgWdMLyNP8L5eR96kz00tY7I6WCr8kGC5WaGlP0gklk0i3kOcpOo36TuxCWaO36vpYGn7
        3KwHOvSypNmQFOc6sjHBuXkaN4uVn5CkUt/PBAylKVJzZXRBMPUy+D5IvW0Jq/v8rBCsF2M15knCV4R8
        ZImoVSMJDljfpPSc7g0g6mPtFh+3zPrtimA3mJ0b9hS1ZYu6ZDW5v1OC9RLO57SW9vywZDSCM2OMIIUr
        /66qHdORisbKt6aKcV1/sbBj1fY1ua8TgtVosiII2VnqEnVFCs6oEIxqZrWL4IllJxBZe4uwbxMCy56J
        TrAaeoBghQOJDL1W2EMgbDgqBE+FKvXO5H6dJ1i+Nz7+wWWE1f0+KsFqIG4JLooVGfqurj9TmDPCBBOG
        XS6wLGr1EUZgo8hciPhoBKthGDd+rnLIRUFtf8x7QebnYZ6DUdGLMjUcim/7fYVbtW1dSe2UYDWI9Bnf
        9SF2jNX8aIEXDO0TYhQTlYr2Qn1oZP1N72cN9n9kA/3x+r1U8JczP06fxiA5igSrMfifviuwMudfEmLE
        BfmRYC3AT+j6W4VDYkizyuiJFU3bhYNyGiqvinELCbfumusjVtD8vsFfb63ZWhOsRpBY5jeM3QdmwxiV
        Amu6rL1aOUyUQ/jxVGG7piN4tglWfW5u/Zo+W9KKBvuogLQGsz31Hf66LyinNe2DqbBumwLUGJbzUDWu
        UZ8seoHciMWaxg/8sfe8P9pJhyEBb8Yeo7I2zxbBqudA4c1CaPECo+ksYfeyNmdTC0uYV3r9Qd8eVeXZ
        6HMwHS9MeI1hK2btuVTPsO7r5uooUt0lwSrbbX77qj5b0w3SyhyKtNaeR7Py/TVq+rj2IG8lwYxIgdHp
        JI7PlUZp0WhUGTsLzNVWNgd1YYEj1YVzdWyCVZ6bW5HWUKIdMXXysFu7OZQhjOf6t1G5tedgVbqdgLQ6
        cluNsEA8GVXFXP0BASs0b6gwz31TYK6eoTViEaxynLSG5lZUaOnc2kTFqlyMNT9ghO9cX0PWqTwbyeu9
        Dm89R5TVr7qQ6qK52kk1HTJp3EUiGGs3JK3OEm4kVWXvPKVe/5egkHefalnWtSRYlRFT9aXpTv39EmFe
        1UY3vU91uM1prP2G5mok7RQBt6zWYgPSIbzT0BauHDQJ0vpY2tL0Pao+pzqI+JEbno/nH1K1jMnBXutm
        ba5WhVa6DETjC8+vU17Te1UPIVGkGr/aCvnRnkoE675FAnNrKMrE3PpSoVNp9aR2V9VFzN5qz691vdIG
        98ZGlirYQcBR/5XRuYzydcKBTcmr85zqYa5+jEDivO+u+aQzXyPVU7sY9PlewslCaG5l8xvhVCzhRnlZ
        dd4jm1bIciGx0NJOuGFkkNbeSFdLgnN+LJmJHIHANhDLCCLdFfcnyj6gsg5TPbsISNqNRntoH1KNBc7S
        XCjrg2exhGfl1B36RiDlaL3AoMr3I+05Tai9xaaxBOc7mhEuLBOsbA0XmSKDIdp+3RJXy0k1vmhIqv2O
        ROsQR2dunS1ppY0cTVHUZ0+O0WeNJdggmtH4MOGzAQliLiPees8yaYz1vepiPmOu/qXRJqYYpHVaTDhW
        3QH3z2m9kJ//RbXnkUI0rReNYM9IIKHNMnzcNRa7zxF27rIzvfawk9FSyVxbOEttcHYLRlJR30RPyuua
        YKxcLEIrVksGAytI+3TVySqbiFAoAYGO5rvWEbhQ+1U2mZ5vEKwMF+d5+LH4gSP4usxCxKdbJYwbI5h5
        Eiv4wTGJVnlE3EKZE74UEZVrvHIVUMUHq0yOd7LWwXEzmTYmYwe5Ng4mwZ66ZEcCWf/fEfKBev7eIBwt
        tAok6HnSdD/tDSaiQX62Ce6Rb4B9Rn+3SmPV89ggjxNIKLSWDG/QdVyzaWeODBXBHtF0Bj4mRoXlHmzM
        OqP2ASZ6joUBTsNxUsrAwbjjaAd3jc8rcoMMH7RWGDCTQI5xOFHw4/OuHncYyzGhQTuUBHtEQwbhTxYV
        /Jir6yBWqVhdqhy90b1Yxr52WJMRMY3g7Bq7+311/fKq04SeYwpYKVhzPClLuF4k2xcOmqEmOBc4cQaJ
        dZgJFu8FQuH5U/r+aYKvEZgHJ9V9XoKza8S3OZ3HkcyzJ5f42YRJQ6FETg4imFLZcBwZgj2p3lEvfbZg
        uRQEJdjWOeNIJF1jedFfWrxaf0+dAmARnJFM/tZVHskYRkcYfv5+uo4at06pvV3XXy3Udv1GjmCPaNZi
        mSetBQVUIAerHC6g5vF1/aU9DgbfIachZqhor655uv97HsloDNJxKJvgzZWCNYWwbPh8obEVPrIEe53v
        Nq75VrBvQHF93COHCNUCQwKDBGeSfF8950e8mP8JJVoWMSk1hF9bWd5D5yZVNWAKAgeHqVNJ7EOCrYgQ
        AYVDA75pIcFZZ5MKNBEom/kZd4oFlNrWdsE7+b76YPvBbQn2pBr1yVzsL62hQpcWdGQpwRnJ+OG+j8y8
        jiHWOPGtxGhLBBeQRurtGoFc6pNKOrISwRnJJ6g8cr46T2IY+Tk4otRXJjhWnVXKSQRH+s9k6shEcJUR
        V3aPOtJfLpxcbOgHJIIjEZEIrjegk4q2jzkkeI8V/VShUoZIkuABkWARRf6yf6QhgQ2s3cIzLhLBg0Ow
        n9TuBzsIRHxJOF6YscyYCB58gn2yyft6jU90G4L17HyBPDJ87jkxjcY0B+cGnjrEl+AJ/b1MIHvDWgw4
        1Yt+1XKTVJ7LWWazup96c04i+P9xYubHwyJ3iE/wHR6Be2VS6i8znlmXYKReILWGEKK1/3dFrPdR+UsE
        f4fIQMSiF6nR+YWAa3SNfKXW+b45CZ4i2CPSPy+kMsEqd0+BNV3WdvPtZ0Xpy8JxQquFhkwz0BesV+fr
        iR7vjh6EUKPJksCFsVQmMeNjhcY7CGIS7Knh0ElAZGhcLiyOQCy7GXh3+iBPLKtj7GxslWxorqLFUjf5
        ctTYhcK7A0RzKBqJarW3s+QIZm58tjBl+OhzZQnWvZcJlhq+VdfJ7dqlbf8wmAUs++sNYhECjjjsbLNe
        dAk2iGZuJE/JSnVhOwsEVc6e1L1kX+TXg8njulRA0i70OrJQRes+P/8LNXytMGMhH6IFcpnPFSptBOOd
        BE4g8BPbneSyzEn6z95tB1DZ850T7M2N7DKg8yeMkYzEkKFYmvqie0ijIekN9ZlXdUijHwQpI5gN1jcL
        TCnT/udDVg9nW68T/HXnV5QsSxKIOV0YN9pHQsLFQme7KWYIWNkIiP29Xo7/W8he19AG57P0Xel/PNM9
        WNOrBfKvrOwOrlU2sryBSJ4zKjWUrmOeXaX7t6c+wbeKXbvI8WqUlNe2/2dNgg3VTYewn9fKniSBjg4p
        3fCsezDqHiGQW50/sGV1VTdJz3IWCBvb0SaWZiCx/enCNE9Af5MFGhqwt2Vllg7YtkSGnu8ZwV7Hs9se
        lXaL0bGo27VCpf/Hy4AQzhAw4kjGmzp2QZ+txHeXeI+l7KthRzADBgubzMpp7pH+5igpphwrj5uEvVVC
        pfm6K3Ipt+cEe0Szd/YUwUqTxUDDiJr8J9FNECD4El23siZRs0jljIGla3sLbI2xbAAMKk49qLTC1eQ9
        6j7TqLPqVlLnfnUOabK4UDcIeVVJMhwJcLX/nXqAYN8goy6iV0SxZhCka5yhgaRbOwbJqWZXRes02jp9
        VeXeviPYk2hiwUsFAgN5XxWp45AU9jVViiwFCMYGQFqZv5cYdgIqnFRa9hnlN8nRJvKjCV60jtBVIavJ
        PX1LcI5ozs9ge4lFNLnKGFllm7wqLzZQlkAONosYFrGEGY/sZ2Kn+q/JqOjFM1mnY+zQ6dbeYuLddHro
        KONSgrM6GEwQmJ+bqZPzRyC+ktboRT/13A+O8dKZ2uRUAGuHg1Ob0+K6urdobxKulpsO8vO+OzPL3DER
        4326LKPvVXTRy4sUNp2tE/L+LyRhpHGawOSOeotgXdtCIMl9o5AnFmOKOPGMnYxdEhK77IEm2JunF4iI
        ULybw8SId7O/2JFIZgZxYsslwx/GfWrsksUmqU15Q0GwRzTBh4sEK/jgG0vWsRG4TMSJKwVV2nT6bD47
        VAR7RBPvJtQZOmDUV8eERcnfKg2LziYxseoaSoI9oueKuFC8mxg4iwOdH4Uci6wm5Qw1wR7RnBbwAoEz
        qgCfex4nbkJY3WdGguC6nTJM9yeCGy5eDMogSAQngpstzw3KCB/2diYJThKcJHiQpTxJcJLgJMFJgodc
        ChLBieC+ner6tmGDLDX91PZE8JBrn0RwIjhZ0f2kcuu2JUlwkuAkwXWlpp/uTxI85BL8X15jinp7VU1W
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>