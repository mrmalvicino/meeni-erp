<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>