<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>