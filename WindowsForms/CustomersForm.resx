<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>