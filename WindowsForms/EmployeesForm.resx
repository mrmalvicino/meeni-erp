<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EJs1+SVKD1wAAAAASUVORK5CYII=
</value>
  </data>
</root>