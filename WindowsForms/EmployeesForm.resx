<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>