<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        b8sAAAAASUVORK5CYII=
</value>
  </data>
</root>