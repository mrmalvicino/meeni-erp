<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="profilePictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>